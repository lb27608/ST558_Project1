---
title: "ST 558 Project 1"
author: "Lee Bennett and Madelyn Garrison"
format: html
editor: visual
---

```{r}
#| include: false
#| echo: false

library(tidyverse)
library(tidycensus)
library(ggplot2)
library(httr)
library(jsonlite)
```

# Retrieving and Processing Data from the PUMS Census API

First, we'll create a helper function that will process the raw data retrived from the API into a `tibble`. This function also adds a new class called `census` for this tibble, and we will use this class for summarizing the data later.

```{r}

cens_tibble <- function(rawdata) {
  pums_tib <- as_tibble(rawdata)
  
  class(pums_tib) <- c("census",class(pums_tib))
  
  return(pums_tib)
}
```


## Get PUMS data from Census API for a single year

```{r}

url_pums<-"https://api.census.gov/data/2022/acs/acs1/pums?get=SEX,PWGTP,AGEP&SCHL=04&for=state:6"
raw<-httr::GET(url_pums)
str(raw,max.level=1)
parsed<-fromJSON(rawToChar(raw$content))
info<-as_tibble(parsed[-1,])
```

Suppose a user wants to obtain multiple years of data for a given set of variables. The following function will call the query for a list of years specified as a vector:

```{r}

pums_years <- function(yr_list) {

}
```

# Exploring the PUMS Data

## Summary statistics

We previously created a class called `census` for tibbles generated from PUMS data queriers. We now create a custom summary function for tibbles of this class to produce means and standard deviations for selected numeric variables:

```{r}
summary.census <- function(cens_tibble,num_vars,cat_vars){
  
}
```


## Creating box plots

Finally, we create a function that allows us to generate a box plot for a specified numeric variable, grouped by the levels of a specified categorical variable:

```{r}
plot.census <- function(cens_tibble,num_var,cat_var) {
  ggplot(cens_tibble,aes(x=get(cat_var), y=get(num_var), weight=PWGTP)) + geom_boxplot()

}
```


---
title: "ST 558 Project 1"
author: "Lee Bennett and Madelyn Garrison"
format: html
editor: visual
---

```{r}
#| include: false
#| echo: false

library(tidyverse)
library(tidycensus)
library(ggplot2)
library(httr)
library(jsonlite)
```

# Retrieving and Processing Data from the PUMS Census API

First, we'll create a helper function that will process the raw data retrived from the API into a `tibble`. This function also adds a new class called `census` for this tibble, and we will use this class for summarizing the data later.

```{r}

cens_tibble <- function(rawdata) {
  raw<-httr::GET(rawdata)
  parsed<-fromJSON(rawToChar(raw$content))
  matrix_data<-parsed[-1,]
  colnames(matrix_data)<-parsed[1,]
  pums_tib <- as_tibble(matrix_data)
  
  class(pums_tib) <- c("census",class(pums_tib))
  
  return(pums_tib)
}
```


## Get PUMS data from Census API for a single year

```{r}

trial<-function(yr,AGEP=TRUE,GASP=FALSE,GRPIP=FALSE,JWAP=FALSE,JWDP=FALSE,JWMNP=FALSE,FER=FALSE,HHL=FALSE,HISPEED=FALSE,SCH=FALSE,SCHL=FALSE,SEX=TRUE,geography='state',geo_code=06){

base_url<-"https://api.census.gov/data/"
year_url<-paste(yr,'/',sep='')
middle_base_url<-"acs/acs1/pums?"
get_start_url<-"get="
    vec<-'PWGTP'
   if (AGEP) {
    vec <- c(vec,'AGEP')
    }
  if (GASP) {
    vec <- c(vec,'GASP')
  }
    if (SEX){
      vec<-c(vec,'SEX')
    }
    if (GRPIP){
      vec<-c(vec,'GRPIP')
    }
    if (JWAP){
      vec<-c(vec,'JWAP')
    }
    if (JWDP){
      vec<-c(vec,'JWDP')
    }
    if (JWMNP){
      vec<-c(vec,'JWMNP')
    }
    if (FER){
      vec<-c(vec,'FER')
    }
    if (HHL){
      vec<-c(vec,'HHL')
    }
    if (HISPEED){
      vec<-c(vec,'HISPEED')
    }
    if (SCH){
      vec<-c(vec,'SCH')
    }
    if (SCHL){
      vec<-c(vec,'SCHL')
    }
vars_url<-paste0(vec[-2],collapse = ',')
get_end_url<-paste('&',vec[2],sep='')
for_url<-"&for="
  if (geography =='division') {
    geo<-'division'
  }
  if (geography =='region') {
    geo<-'region'
  }
  if (geography =='state') {
    geo<-'state'
  }
 if (geography =='all') {
    geo_url<-''
    for_url<-''
 }
else{
geo_url<-paste(geo,geo_code,sep=':')
}
url_pums<-paste0(base_url, year_url,middle_base_url,get_start_url,vars_url,get_end_url,for_url,geo_url)
cens_tibble(url_pums)
}
attempt<-trial(2022,GASP=TRUE,geography='division',geo_code=8)

```

Suppose a user wants to obtain multiple years of data for a given set of variables. The following function will call the query for a list of years specified as a vector:

```{r}

pums_years <- function(yr_list) {

}
```

# Exploring the PUMS Data

## Summary statistics

We previously created a class called `census` for tibbles generated from PUMS data queriers. We now create a custom summary function for tibbles of this class to produce means and standard deviations for selected numeric variables:

```{r}
summary.census <- function(cens_tibble,num_vars,cat_vars){
  
}
```


## Creating box plots

Finally, we create a function that allows us to generate a box plot for a specified numeric variable, grouped by the levels of a specified categorical variable:

```{r}
plot.census <- function(cens_tibble,num_var,cat_var) {
  ggplot(cens_tibble,aes(x=get(cat_var), y=get(num_var), weight=PWGTP)) + geom_boxplot()

}
```

